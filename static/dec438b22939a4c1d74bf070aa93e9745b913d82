<!doctype html>
<style>
label:after{content:": ";}
</style>
<title>espresso build apk</title>
<h1>Espresso Theatre API</h1>
<h2>espresso build apk program page</h2>
This program generates a PhoneGap/Android package from the provided
Espresso project ZIP archive.
<h3>notes</h3>
<ul>
  <li>
    The archive should contain an Espresso project, i.e.
    <tt>app/</tt>, <tt>config.json</tt>, and optionally
    <tt>frameworks/</tt>.
  </li>
  <li>An example archive can be found <a href="/example.zip">here</a>.
  <li>Any error is treated as internal server error.</li>
</ul>
<h3>execute program</h3>
<form method="post" enctype="multipart/form-data"
      action="https://localhost:8000/dec438b22939a4c1d74bf070aa93e9745b913d82">

  <fieldset><legend>upload configuration</legend>
    <ul>
      <li>
      <label for="archive">Source archive</label><input id="archive" type="file" name="archive" accept="application/zip">
      </li>
    </ul>
  </fieldset>

  <fieldset><legend>espresso build configuration</legend>
  </fieldset>

  <fieldset><legend>package configuration</legend>
    <ul>
      <li>
        <label for="sdk">SDK</label>
        <select id="sdk" name="sdk">
          <option selected="selected" value="android-7">Android 2.1</option>
          <option value="android-8">Android 2.2</option>
          <option value="android-10">Android 2.3.3</option>
          <option value="android-11">Android 3.0</option>
          <option value="android-12">Android 3.1</option>
          <option value="android-13">Android 3.2</option>
          <option value="android-14">Android 4.0</option>
        </select>
      </li>
      <li><label for="package">Package name</label><input id="package" type="text" name="package" value="com.test.helloworld"></li>
      <li><label for="activity">Activity name</label><input id="activity" type="text" name="activity" value="HelloWorld"></li>
    </ul>
  </fieldset>

  <fieldset><legend>download configuration</legend>
    <ul>
      <li><label for="filename">Download filename</label><input id="filename" type="text" name="filename" value="HelloWorld-debug.apk"></li>
    </ul>
  </fieldset>

  <input type="submit" value="execute">
</form>

<h3>curl example</h3>
<pre>
  time curl -F sdk=android-7 -F archive=@example.zip -ksS https://localhost:8000/dec438b22939a4c1d74bf070aa93e9745b913d82 > HelloWorld-debug.apk
</pre>

<h3>HATEOAS example</h3>
This example outlines how a
<a href="https://en.wikipedia.org/wiki/HATEOAS">HATEOAS</a>-client
could login, find, and execute this program (MOD error checking).
<pre>
  export api_url=https://oxberg.krebsco.de:31001

  # GET the API entry point.
  export page="$(curl -k $api_url)"

  # Find the login URL.
  login_url=$(find_login_url)

  # Login; GET the account overview.
  export page="$(curl -k $login_url)"

  # Find the espresso build apk program URL.
  program_url=$(find_program_url 'espresso build apk')

  # Execute the program, and save the resulting Android package.
  curl -k -F sdk=android-7 -F archive=@example.zip $program_url \
      > HelloWorld-debug.apk
</pre>
Where the <tt>find_*_url</tt>
programs parse the relevant information from <tt>$page</tt>.
Currently the format of <tt>$page</tt> is not stable.
Later there should be (at least) a (versioned) JSON-format,
retrievable by using an appropriate <tt>Accept</tt>-header.
